USE UNIVERSITY;
SELECT STUDENT.NAME,COURSE.COURSE_NAME,GRADE_REPORT.GRADE 
FROM STUDENT 
INNER JOIN GRADE_REPORT ON GRADE_REPORT.STUDENT_NUMBER=STUDENT.STUDENT_NUMBER 
INNER JOIN SECTION ON SECTION.SECTION_IDENTIFIER=GRADE_REPORT.SECTION_IDENTIFIER 
INNER JOIN COURSE ON COURSE.COURSE_NUMBER=SECTION.COURSE_NUMBER 
WHERE STUDENT.NAME="SMITH";

SELECT STUDENT.NAME,GRADE_REPORT.GRADE 
FROM STUDENT 
INNER JOIN GRADE_REPORT ON GRADE_REPORT.STUDENT_NUMBER= STUDENT.STUDENT_NUMBER 
INNER JOIN SECTION ON SECTION.SECTION_IDENTIFIER = GRADE_REPORT.SECTION_IDENTIFIER
INNER JOIN COURSE ON COURSE.COURSE_NUMBER=SECTION.COURSE_NUMBER
WHERE COURSE.COURSE_NAME="DATABASE";

-- View to retrieve the names of all senior students majoring in ‘CS’ (computer science).
CREATE VIEW CS_SENIOR1 AS SELECT NAME FROM STUDENT WHERE MAJOR='CS' AND CLASS=2;
SELECT * FROM CS_SENIOR1;

-- Retrieve the names of all courses taught by Professor King in 2007 and 2008
SELECT COURSE.COURSE_NAME,SECTION.INSTRUCTOR,SECTION.YEAR FROM 
COURSE INNER JOIN SECTION ON COURSE.COURSE_NUMBER=SECTION.COURSE_NUMBER
WHERE SECTION.INSTRUCTOR="KING"
AND SECTION.YEAR IN("07","08");

-- For each section taught by Professor King, retrieve the course number, semester, year, and number of students who tool the section. 
SELECT STUDENT.STUDENT_NUMBER,SECTION.INSTRUCTOR,SECTION.COURSE_NUMBER,SECTION.SEMESTER,SECTION.YEAR,count(STUDENT.STUDENT_NUMBER) FROM STUDENT 
INNER JOIN COURSE ON COURSE.DEPARTMENT=STUDENT.MAJOR INNER JOIN SECTION ON SECTION.COURSE_NUMBER=COURSE.COURSE_NUMBER
group by SECTION.SECTION_IDENTIFIER
HAVING SECTION.INSTRUCTOR="KING";
-- Retrieve the name and transcript of each senior student (Class=2) majoring in CS. 
-- A transcript includes course name, course number, credit hours, semester, year and grade for each course completed by the student.

SELECT STUDENT.NAME,COURSE.COURSE_NAME,COURSE.COURSE_NUMBER,COURSE.CREDIT_HOURS,SECTION.SEMESTER,SECTION.YEAR,GRADE_REPORT.GRADE FROM STUDENT
INNER JOIN GRADE_REPORT ON STUDENT.STUDENT_NUMBER=GRADE_REPORT.STUDENT_NUMBER 
INNER JOIN SECTION ON GRADE_REPORT.SECTION_IDENTIFIER=SECTION.SECTION_IDENTIFIER
INNER JOIN COURSE ON COURSE.COURSE_NUMBER=SECTION.COURSE_NUMBER
WHERE STUDENT.CLASS=2 AND STUDENT.MAJOR="CS";

--  Insert a new student < ‘Johnson’,25,1, ‘Math’>, in the database
INSERT INTO STUDENT VALUES('JOHNSON',25,1,'MATH');

-- Change the class of student ‘Smith’ to 2
UPDATE STUDENT SET CLASS=2 WHERE NAME='SMITH';

-- Insert a new course, < ‘Knowledge Engineering’, ‘CS4390’, 3, ‘CS’>.
INSERT INTO COURSE VALUES("KNOWLEDGE ENGINEERING","CS4390",3, 'CS');

-- Delete the record for the student whose name is ‘Smith’ and whose student number is 17.
DELETE FROM STUDENT WHERE NAME='SMITH' OR STUDENT_NUMBER=17;

DESC student;

-- Add SGPA column to Grade_report
ALTER TABLE GRADE_REPORT ADD SGPA float;
DESC GRADE_REPORT;

-- Remove SGPA column from Grade_report
ALTER TABLE GRADE_REPORT DROP COLUMN SGPA;

-- Add column Phone Number in student and it should only contain
ALTER TABLE STUDENT ADD PHONE_NUMBER INT CONSTRAINT CH_PHONE CHECK(length(PHONE_NUMBER)=10);


SELECT * FROM STUDENT;

-- Creating Table MarkSheet
CREATE TABLE MARKSHEET(STUDENT_NUMBER INT,SUB1 INT,SUB2 INT,FOREIGN KEY(STUDENT_NUMBER) REFERENCES STUDENT(STUDENT_NUMBER));
INSERT INTO MARKSHEET VALUES(8,98,45),(17,85,99),(25,67,89);

-- Total Mark of Roll Number 17, Double and Triple it\
SELECT STUDENT_NUMBER AS ROLL_NUMBER,(SUB1+SUB2) AS TOTAL_MARK,(SUB1+SUB2)*2 AS DOUBLE_MARK,(SUB1+SUB2)*3 AS TRIPLE FROM MARKSHEET WHERE STUDENT_NUMBER=17;

-- Display the greatest and Least Mark of Sub1
SELECT max(SUB1) AS GREATEST_MARK,min(SUB1) AS LEAST_MARK FROM MARKSHEET;

-- Display the greatest and Least Mark of Sub1 and Average
SELECT MAX(SUB1) AS MAXIMUM,MIN(SUB2) AS MINIMUM,avg(SUB1) AS AVERAGE FROM MARKSHEET;

-- Display Total Number of Students opt MAJOR as CS
SELECT count(NAME) AS TOTAL FROM STUDENT WHERE MAJOR="CS";

-- Display Count of Distinct Mark in SUB1
SELECT count(distinct SUB1) AS COUNT_DISTINCT FROM MARKSHEET;